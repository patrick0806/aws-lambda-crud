service: crud-api

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1 #sp

custom:
  tableName: Worker

plugins:
  - serverless-iam-roles-per-function

functions: 
  getAllWorker:
    handler: api.getAllWorkers
    name: get-all-workers
    events:
      - http:
          path: workers
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: '*'
  getWorker:
    handler: api.getWorker
    name: get-worker
    events:
      - http:
          path: worker/{workerId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: '*'
  createWorker:
    handler: api.createWorker
    name: create-worker
    events:
      - http:
          path: worker
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: '*'
  updateWorker:
    handler: api.updateWorker
    name: update-worker
    events:
      - http:
          path: worker/{workerId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: '*'
  deleteWorker:
    handler: api.deleteWorker
    name: delete-worker
    events:
      - http:
          path: worker/{workerId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: '*'

resources:
  Resources:
    Worker:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
            ## make the primary key